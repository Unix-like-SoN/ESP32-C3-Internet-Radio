#ifndef CONFIG_H
#define CONFIG_H

#include <vector>
#include <Arduino.h>
#include <freertos/FreeRTOS.h>
#include <freertos/semphr.h>
#include "visualizer_styles.h"

// ========================================
// ESP32-C3 GPIO –ü–ò–ù–´
// ========================================
// –î–û–°–¢–£–ü–ù–´ –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø: GPIO2-6, GPIO8-10, GPIO20-21
// 
// –°–ò–°–¢–ï–ú–ù–´–ï (–ù–ï–î–û–°–¢–£–ü–ù–´):
//   GPIO0, GPIO1    - Boot Mode / USB D-
//   GPIO7           - Flash SPI (!–ù–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨!)
//   GPIO11-17       - Flash SPI (CLK, CMD, D0-D3)
//   GPIO18-19       - USB D+/D- (–µ—Å–ª–∏ –Ω–∞—Ç–∏–≤–Ω—ã–π USB –≤–∫–ª—é—á–µ–Ω)
//
// –ò–°–ü–û–õ–¨–ó–£–ï–ú–´–ï –í –ü–†–û–ï–ö–¢–ï:
//   GPIO2, 3, 10    - –≠–Ω–∫–æ–¥–µ—Ä KY-040
//   GPIO4, 5, 6     - I2S (MAX98357A)
//   GPIO8, 9        - I2C (OLED SSD1306)
//
// –°–í–û–ë–û–î–ù–´–ï: GPIO20, GPIO21 (–¥–ª—è –±—É–¥—É—â–∏—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π)
// ========================================

// === OLED –î–ò–°–ü–õ–ï–ô ===
#define OLED_SDA 8
#define OLED_SCL 9
#define OLED_RESET -1
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32

// === I2C –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
#define I2C_FAST_MODE_FREQ          400000   // –ß–∞—Å—Ç–æ—Ç–∞ I2C Fast Mode (400kHz) - –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è OLED
#define I2C_STANDARD_MODE_FREQ      100000   // –ß–∞—Å—Ç–æ—Ç–∞ I2C Standard Mode (100kHz)
#define I2C_RETRY_INTERVAL          5000     // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ OLED (–º—Å)

// === –ü–ò–ù–´ –≠–ù–ö–û–î–ï–†–ê KY-040 ===
#define ENCODER_CLK  10
#define ENCODER_DT   3
#define ENCODER_SW   2

// === –ü–ò–ù–´ I2S –î–õ–Ø MAX98357A ===
#define I2S_BCLK     4
#define I2S_LRC      5
#define I2S_DOUT     6

// === –¢–ê–ô–ú–ê–£–¢–´ –ò –ò–ù–¢–ï–†–í–ê–õ–´ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö) ===
#define AUDIO_BUFFER_SIZE           131072   // –†–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞ (128KB) - —É–≤–µ–ª–∏—á–µ–Ω –¥–ª—è —Å–ª–∞–±–æ–≥–æ WiFi
#define AUDIO_PREBUFFER_TIME        2000     // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º (2—Å)
#define AUDIO_BUFFER_LOW_THRESHOLD  20       // –ü–æ—Ä–æ–≥ –Ω–∏–∑–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –±—É—Ñ–µ—Ä–∞ (20%)
#define AUDIO_CONNECTION_TIMEOUT    20000    // –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (—É–≤–µ–ª–∏—á–µ–Ω)
#define AUDIO_STATE_DELAY           1000     // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –∞—É–¥–∏–æ
#define AUDIO_START_TIMEOUT         10000    // –¢–∞–π–º–∞—É—Ç –∑–∞–ø—É—Å–∫–∞ –ø–æ—Ç–æ–∫–∞ (—É–≤–µ–ª–∏—á–µ–Ω)
#define AUDIO_I2S_RETRY_INTERVAL    5000     // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ I2S (–º—Å)

#define WIFI_CONNECTION_TIMEOUT     8000     // –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WiFi
#define WIFI_CHECK_INTERVAL         20000    // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ WiFi —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
#define WIFI_RETRY_DELAY            500      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ WiFi

// === WIFI RECOVERY (–ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Å–≤—è–∑–∏ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã) ===
#define WIFI_AUTO_RECONNECT_CHECKS  4        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø–µ—Ä–µ–¥ —Ä—É—á–Ω—ã–º –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º (4 √ó 10s = 40s)
#define WIFI_AUTO_RECONNECT_INTERVAL 10000   // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ-—Ä–µ–∫–æ–Ω–Ω–µ–∫—Ç–∞ (10 —Å–µ–∫)
#define WIFI_MANUAL_RECONNECT_TIMEOUT 50000  // –í—Ä–µ–º—è –Ω–∞ —Ä—É—á–Ω–æ–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (50 —Å–µ–∫)
#define WIFI_REBOOT_COUNTDOWN       5        // –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π (—Å–µ–∫—É–Ω–¥—ã)

#define SYSTEM_STATUS_INTERVAL      60000    // –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã

#define INPUT_DEBOUNCE_TIME         5        // –ê–Ω—Ç–∏–¥—Ä–µ–±–µ–∑–≥ —ç–Ω–∫–æ–¥–µ—Ä–∞ (–º—Å)
#define INPUT_SHORT_PRESS           300      // –ö–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ (–º—Å)
#define INPUT_LONG_PRESS            5000     // –î–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è (–º—Å)
#define INPUT_DOUBLE_CLICK_DELAY    400      // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ (–º—Å)
#define INPUT_SHUTDOWN_ANIM_START   1000     // –ù–∞—á–∞–ª–æ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏—è (–º—Å)

#define DISPLAY_INACTIVITY_TIMEOUT  15000    // –¢–∞–π–º–∞—É—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
#define DISPLAY_INIT_DELAY          1000     // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∏—Å–ø–ª–µ—è
// üìù –î–∏—Å–ø–ª–µ–π: 60 FPS (16ms), I2C 400 kHz, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∞—É–¥–∏–æ (–≤ main.cpp)

#define VOLUME_STEP                 0.02f    // –®–∞–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
#define VOLUME_MIN                  0.0f     // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å
#define VOLUME_MAX                  1.0f     // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å
#define VOLUME_DEFAULT              0.05f    // –ì—Ä–æ–º–∫–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
#define VOLUME_SAVE_DELAY           5000     // –ó–∞–¥–µ—Ä–∂–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –≤ Flash (–∑–∞—â–∏—Ç–∞ –æ—Ç –∏–∑–Ω–æ—Å–∞)

// === –í–ò–ó–£–ê–õ–ò–ó–ê–¢–û–† –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
#define VISUALIZER_SAMPLE_BUFFER    256      // –†–∞–∑–º–µ—Ä –±—É—Ñ–µ—Ä–∞ –∞—É–¥–∏–æ —Å—ç–º–ø–ª–æ–≤ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
#define VISUALIZER_BANDS            16       // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–æ—Ç–Ω—ã—Ö –ø–æ–ª–æ—Å
#define VISUALIZER_MAX_AMPLITUDE    15000    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∞–º–ø–ª–∏—Ç—É–¥–∞ –¥–ª—è map() (int16_t –¥–∏–∞–ø–∞–∑–æ–Ω)
#define VISUALIZER_MIN_STACK        512      // –ú–∏–Ω–∏–º—É–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Å—Ç–µ–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–±–∞–π—Ç)

// === FREERTOS –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
#define COMMAND_QUEUE_SIZE          10       // –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏ –∫–æ–º–∞–Ω–¥ –º–µ–∂–¥—É –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–æ–º –∏ –æ—Å–Ω–æ–≤–Ω—ã–º loop

// === SERIAL / DEBUG –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
#define SERIAL_BAUD_RATE            115200   // –°–∫–æ—Ä–æ—Å—Ç—å UART –¥–ª—è Serial Monitor
#define SERIAL_INIT_DELAY           2000     // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Serial (–º—Å)

// === POWER MANAGEMENT ===
#define POWER_STABILIZATION_DELAY   100      // –ó–∞–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ –ø–∏—Ç–∞–Ω–∏—è –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è (–º—Å)
#define POWER_BROWNOUT_EXTRA_DELAY  500      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ brown-out detection (–º—Å)

// === –û–ë–©–ò–ï –ò–ù–¢–ï–†–í–ê–õ–´ –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ===
#define WARNING_LOG_INTERVAL        5000     // –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (–º—Å)

// === WIFI –ù–ê–°–¢–†–û–ô–ö–ò ===
struct WiFiCredentials {
    String ssid;
    String password;
};

extern WiFiCredentials wifiConfig;  // –û–¥–Ω–∞ WiFi —Å–µ—Ç—å (–±–µ–∑ backup)

// === –†–ê–î–ò–û–°–¢–ê–ù–¶–ò–ò ===
#define MAX_RADIO_STATIONS 25  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π

struct RadioStation {
    String name;
    String url;
    bool isAvailable;
};

extern std::vector<RadioStation> stations;
extern int totalStations;

// === –ó–ê–©–ò–¢–ê –û–¢ RACE CONDITION ===
// –ú—å—é—Ç–µ–∫—Å –¥–ª—è –∑–∞—â–∏—Ç—ã stations –≤–µ–∫—Ç–æ—Ä–∞ –æ—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
// –∏–∑ main loop (audio) –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
extern SemaphoreHandle_t stationsMutex;

// –ú–∞–∫—Ä–æ—Å—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ stations
#define STATIONS_LOCK()   xSemaphoreTake(stationsMutex, portMAX_DELAY)
#define STATIONS_UNLOCK() xSemaphoreGive(stationsMutex)

// === –£–ß–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°–ê ===
struct WebCredentials {
    String username;
    String passwordHash; // SHA256
};

extern WebCredentials webCredentials;

// === –°–¢–ò–õ–¨ –í–ò–ó–£–ê–õ–ò–ó–ê–¢–û–†–ê ===
extern VisualizerStyle visualizerStyle;
extern uint8_t displayRotation; // 0=Normal, 2=Flipped 180¬∞

// === –°–ï–°–°–ò–Ø –ò –ê–í–¢–û–õ–û–ì–ò–ù ===
#define SESSION_TOKEN_LENGTH        32       // –î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞ —Å–µ—Å—Å–∏–∏ (—Å–∏–º–≤–æ–ª–æ–≤)

extern String sessionToken;      // –¢–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—Ö–æ–¥–∞
extern int rebootCounter;        // –°—á–µ—Ç—á–∏–∫ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–æ–∫ (–æ—á–∏—Å—Ç–∫–∞ –∫–∞–∂–¥—ã–µ 25)

// === –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ï–ô ===
void setup_filesystem();
bool load_wifi_config();
bool save_wifi_config();
bool load_stations_config();
bool save_stations_config();
bool load_state();
void save_state();
bool load_credentials();
bool save_credentials(const String& username, const String& password);
bool verify_credentials(const String& username, const String& password);

#endif // CONFIG_H